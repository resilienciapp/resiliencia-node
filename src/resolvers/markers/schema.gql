enum RequestStatus {
  accepted
  pending
  rejected
}

type AdminRequest {
  createdAt: Date!
  id: Int!
  status: RequestStatus!
  userName: String!
}

type Marker {
  adminRequests: [AdminRequest!]!
  category: Category!
  description: String
  duration: Int!
  expiresAt: Date
  id: Int!
  latitude: Float!
  longitude: Float!
  name: String!
  recurrence: String!
  requests: [Request!]!
  subscribedUsers: Int!
  timeZone: String!
}

input AddMarkerInput {
  category: Int!
  description: String
  duration: Int!
  expiresAt: Date
  latitude: Float!
  longitude: Float!
  name: String!
  recurrence: String!
  timeZone: String!
}

input RespondMarkerRequestInput {
  requestId: Int!
  response: RequestStatus!
}

type Mutation {
  addMarker(input: AddMarkerInput!): Marker!
  confirmMarker(id: Int!): Marker!
  deleteMarker(id: Int!): [Marker!]!
  reportMarker(id: Int!): [Marker!]!
  respondMarkerRequest(input: RespondMarkerRequestInput!): Marker!
}

type Query {
  marker(id: Int!): Marker!
  markers: [Marker!]!
}
